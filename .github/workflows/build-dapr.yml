name: Build NetEvolve.HealtChecks.Dapr

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
    - 'Directory.Build.props'
    - 'src/Directory.Build.props'
    - 'src/NetEvolve.HealthChecks.Abstractions.Shared/**'
    - 'src/NetEvolve.HealthChecks.Dapr/**'
  pull_request:
    branches: [ main ]
    paths:
    - 'Directory.Build.props'
    - 'src/Directory.Build.props'
    - 'src/NetEvolve.HealthChecks.Abstractions.Shared/**'
    - 'src/NetEvolve.HealthChecks.Dapr/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Disable the .NET logo in the console output
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Package name for upload
  HEALTHCHECK_PACKAGE: "packages/NetEvolve.HealthChecks.Dapr.*.nupkg"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: |
          5.0.x
          6.0.100

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.13
      with:
        versionSpec: '5.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.13
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml

    - name: Restore NuGet Dependencies
      run: dotnet restore

    - name: Build Solution
      run: dotnet build --configuration Release /p:Version=$GITVERSION_FULLSEMVER --no-restore

    - name: Pack NuGet Packages
      run: dotnet pack --configuration Release /p:Version=$GITVERSION_FULLSEMVER --no-build --no-restore -o packages --include-symbols -p:SymbolPackageFormat=snupkg

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-packages
        path: |
          packages/*.nupkg
          packages/*.snupkg
  
  publish:
    name: Publish NuGet Packages
    needs: [ build ]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: release-packages
        path: packages

    - name: Publish NuGet Package
      run: dotnet nuget push $HEALTHCHECK_PACKAGE -s https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{ secrets.NUGET_TOKEN }}